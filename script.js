   const apiToken = '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';  // –í–∞—à API —Ç–æ–∫–µ–Ω
    const emotionModelUrl = 'https://api-inference.huggingface.co/models/MaxKazak/ruBert-base-russian-emotion-detection';

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ API –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    function analyzeEmotions() {
        const text = document.getElementById('text-input').value.trim();
        if (!text) {
            document.getElementById('result').innerHTML = '‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.';
            return;
        }

        const emotionData = { "inputs": text.toLowerCase() };

        fetch(emotionModelUrl, {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${apiToken}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(emotionData)
        })
        .then(response => response.json())
        .then(data => displayEmotions(data[0]))
        .catch(error => {
            document.getElementById('result').innerHTML = `‚ö†Ô∏è –û—à–∏–±–∫–∞.–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑`;
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    function displayEmotions(emotions) {
        if (!emotions || emotions.length === 0) {
            document.getElementById('result').innerHTML = '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —ç–º–æ—Ü–∏–∏.–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑';
            return;
        }

        let emotionText = '<b>üîç –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç–º–æ—Ü–∏–π:</b><br>';
        emotions.forEach(emotion => {
            const label = getEmotionLabel(emotion.label);
            const score = (emotion.score * 100).toFixed(2);
            emotionText += `‚Ä¢ ${label}: <b>${score}%</b><br>`;
        });
        document.getElementById('result').innerHTML = emotionText;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –º–µ—Ç–∫–∏ —ç–º–æ—Ü–∏–∏
    function getEmotionLabel(label) {
        const emotionLabels = {
            "joy": "üòä –†–∞–¥–æ—Å—Ç—å",
            "sadness": "üò¢ –ì—Ä—É—Å—Ç—å",
            "anger": "üò† –ó–ª–æ—Å—Ç—å",
            "surpise": "üò≤ –£–¥–∏–≤–ª–µ–Ω–∏–µ",
            "disgust": "ü§¢ –û—Ç–≤—Ä–∞—â–µ–Ω–∏–µ",
            "fear": "üò® –°—Ç—Ä–∞—Ö",
            "neutral": "üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å",
            "interest": "ü§î –ò–Ω—Ç–µ—Ä–µ—Å",
            "guilt": "üòî –í–∏–Ω–∞"
        };
        return emotionLabels[label] || label;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
    function clearText() {
        document.getElementById('text-input').value = '';
        document.getElementById('result').innerHTML = '';
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
    function pasteText() {
        navigator.clipboard.readText().then(text => {
            document.getElementById('text-input').value = text;
        });
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
    document.getElementById('analyze-btn').addEventListener('click', analyzeEmotions);
    document.getElementById('paste-btn').addEventListener('click', pasteText);
    document.getElementById('clear-btn').addEventListener('click', clearText);

