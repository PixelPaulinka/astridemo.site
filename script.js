const apiToken = '73532256927db281cb8ba852d4a2f8fc73e95428f04b8118300c4adfa74d5dbb';  // –í–∞—à API —Ç–æ–∫–µ–Ω
const deepseekUrl = 'https://api.together.xyz/v1/chat/completions';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ API –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function analyzeEmotions() {
    const text = document.getElementById('text-input').value.trim();
    const resultDiv = document.getElementById('result');
    const loadingDiv = document.getElementById('loading');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
    if (!text) {
        resultDiv.innerHTML = '<div class="error">‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.</div>';
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
    loadingDiv.style.display = 'block';
    resultDiv.innerHTML = '';

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –∑–∞–ø—Ä–æ—Å–∞
    const cleanedText = text.replace(/,/g, '');
    const prompt = `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ–∫—Å—Ç: '${cleanedText}' –∏ –æ–±—ä—è—Å–Ω–∏, –∫–∞–∫–∏–µ —ç–º–æ—Ü–∏–∏, —Ç—Ä–æ–ø—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å–Ω—ã–µ —Å–º—ã—Å–ª—ã –º–æ–≥—É—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å —ç—Ç–∏–º —Ç–µ–∫—Å—Ç–æ–º. –î–∞–π –ø–æ–ª–Ω—ã–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑.`;

    const data = {
        model: 'meta-llama/Llama-3.3-70B-Instruct-Turbo-Free',  // –ú–æ–¥–µ–ª—å –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        messages: [{ role: 'user', content: prompt }],
        max_tokens: 1500  // –£–≤–µ–ª–∏—á—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ API
    fetch(deepseekUrl, {
        method: 'POST',
        headers: {
            'Authorization': `Bearer ${apiToken}`,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        // –°–∫—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
        loadingDiv.style.display = 'none';
        displayEmotions(data);
    })
    .catch(error => {
        // –°–∫—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        loadingDiv.style.display = 'none';
        resultDiv.innerHTML = `<div class="error">‚ö†Ô∏è –û—à–∏–±–∫–∞: ${error.message}</div>`;
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function displayEmotions(data) {
    const resultDiv = document.getElementById('result');

    if (!data || !data.choices || data.choices.length === 0) {
        resultDiv.innerHTML = '<div class="error">‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑.</div>';
        return;
    }

    const analysisText = data.choices[0].message.content;
    const formattedAnalysis = formatAnalysis(analysisText);

    resultDiv.innerHTML = `
        <div class="analysis-container">
            <h2>üìñ –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞:</h2>
            ${formattedAnalysis}
        </div>
    `;
}

function formatAnalysis(text) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    const cleanedText = text
        .replace(/[^\p{L}\p{N}\s.,!?\-:]/gu, '') // –†–∞–∑—Ä–µ—à–∞–µ–º –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–∫–∏
        .replace(/^\s*[\d\-*‚Ä¢]+\.?\s*/gm, '') // –£–¥–∞–ª—è–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é –∏ –º–∞—Ä–∫–µ—Ä—ã
        .trim();

    // –°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    return `<div class="text-container">${cleanedText
        .split(/\n\n+/)
        .map(section => {
            const lines = section
                .split('\n')
                .filter(line => line.trim())
                .map(line => line.replace(/^[:]\s*/, ''));

            if (!lines.length) return '';
            
            return `
                <div class="section">
                    ${lines[0] ? `<h3 class="section-title">${lines[0]}</h3>` : ''}
                    ${lines.slice(1).map(line => `
                        <div class="section-line">
                            <div class="decorator"></div>
                            <p>${line}</p>
                        </div>
                    `).join('')}
                </div>
            `;
        })
        .join('')}</div>`;
}
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
function clearText() {
    document.getElementById('text-input').value = '';
    document.getElementById('result').innerHTML = '';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
function pasteText() {
    navigator.clipboard.readText().then(text => {
        document.getElementById('text-input').value = text;
    }).catch(() => {
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞.');
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
document.getElementById('analyze-btn').addEventListener('click', analyzeEmotions);
document.getElementById('paste-btn').addEventListener('click', pasteText);
document.getElementById('clear-btn').addEventListener('click', clearText);
